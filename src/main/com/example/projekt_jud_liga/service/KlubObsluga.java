package main.com.example.projekt_jud_liga.service;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import main.com.example.projekt_jud_liga.domain.Klub;

public class KlubObsluga {
	private Connection connection;

    private String url = "jdbc:hsqldb:hsql://localhost/"; 

    private String stworzTabeleKlub = "CREATE TABLE Klub (id bigint GENERATED BY DEFAULT AS IDENTITY, nazwa varchar(20), barwy varchar(30)z) ";
    
 	private PreparedStatement dodajKlubStmt; 
    private PreparedStatement usunKlubStmt;
    private PreparedStatement pokazWszystkieKlubyStmt;
    private PreparedStatement zmienDaneKlubuStmt;
    private PreparedStatement usunJedenKlubStmt;
    
    private Statement statement;
    
    
    public KlubObsluga()
    {
        try
        {
            connection = DriverManager.getConnection(url);
            statement = connection.createStatement();
        	
			ResultSet rs = connection.getMetaData().getTables(null, null, null,null);
			boolean tableExists = false;
			while (rs.next()) {
				if ("Klub".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}
        	
			if (!tableExists)
				statement.executeUpdate(stworzTabeleKlub);

			dodajKlubStmt = connection
					.prepareStatement("INSERT INTO Klub (nazwa, barwy) VALUES (?, ?)");
			usunKlubStmt = connection
					.prepareStatement("DELETE FROM Klub");
			usunJedenKlubStmt = connection
					.prepareStatement ("DELETE FROM Klub WHERE id = ?");
			pokazWszystkieKlubyStmt = connection
					.prepareStatement("SELECT id, nazwa, barwy FROM Klub");
			zmienDaneKlubuStmt = connection
					.prepareStatement("UPDATE Klub SET nazwa = ?, barwy = ? WHERE id = ?");

		} catch (SQLException e) {
			e.printStackTrace();
		}
    }
    
	public Connection getConnection() {
		return connection;
	}
	
	public void wyczyscKluby() {
		try {
			usunKlubStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	public int dodajKlub(Klub klub) {
		int count = 0;
		try {
	
			dodajKlubStmt.setString(1, klub.getNazwa());
			dodajKlubStmt.setString(2, klub.getBarwy());

			count = dodajKlubStmt.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
	}
	
	public List<Klub> pokazWszystkieKluby() {
		List<Klub> kluby = new ArrayList<Klub>();

		try {
			ResultSet rs = pokazWszystkieKlubyStmt.executeQuery();

			while (rs.next()) {
				Klub k = new Klub();
				k.setId(rs.getInt("id"));
				k.setNazwa(rs.getString("nazwa"));
				k.setBarwy(rs.getString("barwy"));
				kluby.add(k);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return kluby;
	}
	
    public int zmienDane(Klub klub)
    {
        int count = 1;
        try
        {
        	zmienDaneKlubuStmt.setString(1, klub.getNazwa());
        	zmienDaneKlubuStmt.setString(2, klub.getBarwy());
            count = zmienDaneKlubuStmt.executeUpdate();

        }
        catch (SQLException e)
        {
            e.printStackTrace();
        }
        return count;
    }
    
	public int usunJedenKlub(Klub klub)
	{
		int count = 0;
		try {
			usunJedenKlubStmt.setLong(1, klub.getId());

			count = usunJedenKlubStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
		
	}
}
